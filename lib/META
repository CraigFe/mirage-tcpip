# OASIS_START
# DO NOT EDIT (digest: dcb10f894da854c58b0447220a8b0f5c)
version = "3.0.0"
description =
"Implementations for network-related module types from MirageOS."
requires =
"mirage-net-lwt mirage-protocols mirage-protocols-lwt ipaddr cstruct"
archive(byte) = "tcpip.cma"
archive(byte, plugin) = "tcpip.cma"
archive(native) = "tcpip.cmxa"
archive(native, plugin) = "tcpip.cmxs"
xen_linkopts = "-ltcpip_xen_stubs"
exists_if = "tcpip.cma"
package "xen" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 archive(byte) = "tcpip_xen.cma"
 archive(byte, plugin) = "tcpip_xen.cma"
 archive(native) = "tcpip_xen.cmxa"
 archive(native, plugin) = "tcpip_xen.cmxs"
 exists_if = "tcpip_xen.cma"
)

package "udpv6-socket" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix mirage-protocols mirage-protocols-lwt"
 archive(byte) = "udpv6-socket.cma"
 archive(byte, plugin) = "udpv6-socket.cma"
 archive(native) = "udpv6-socket.cmxa"
 archive(native, plugin) = "udpv6-socket.cmxs"
 exists_if = "udpv6-socket.cma"
)

package "udpv4-socket" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "lwt ipaddr.unix cstruct.lwt fmt mirage-protocols mirage-protocols-lwt"
 archive(byte) = "udpv4-socket.cma"
 archive(byte, plugin) = "udpv4-socket.cma"
 archive(native) = "udpv4-socket.cmxa"
 archive(native, plugin) = "udpv4-socket.cmxs"
 exists_if = "udpv4-socket.cma"
)

package "udp" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs ipaddr cstruct cstruct.ppx lwt result rresult mirage-profile tcpip randomconv fmt mirage-protocols mirage-protocols-lwt mirage-random"
 archive(byte) = "udp.cma"
 archive(byte, plugin) = "udp.cma"
 archive(native) = "udp.cmxa"
 archive(native, plugin) = "udp.cmxs"
 exists_if = "udp.cma"
)

package "tcpv6-socket" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix mirage-protocols mirage-protocols-lwt"
 archive(byte) = "tcpv6-socket.cma"
 archive(byte, plugin) = "tcpv6-socket.cma"
 archive(native) = "tcpv6-socket.cmxa"
 archive(native, plugin) = "tcpv6-socket.cmxs"
 exists_if = "tcpv6-socket.cma"
)

package "tcpv4-socket" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix fmt mirage-protocols mirage-protocols-lwt"
 archive(byte) = "tcpv4-socket.cma"
 archive(byte, plugin) = "tcpv4-socket.cma"
 archive(native) = "tcpv4-socket.cmxa"
 archive(native, plugin) = "tcpv4-socket.cmxs"
 exists_if = "tcpv4-socket.cma"
)

package "tcp" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs mirage-protocols mirage-protocols-lwt ipaddr cstruct cstruct.ppx lwt result rresult mirage-profile io-page tcpip duration randomconv fmt mirage-time-lwt mirage-clock mirage-random"
 archive(byte) = "tcp.cma"
 archive(byte, plugin) = "tcp.cma"
 archive(native) = "tcp.cmxa"
 archive(native, plugin) = "tcp.cmxs"
 exists_if = "tcp.cma"
)

package "stack-socket" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "lwt lwt.unix ipaddr.unix io-page.unix logs tcpip.ipv4 tcpip.ipv6 mirage-protocols mirage-protocols-lwt mirage-stack-lwt"
 archive(byte) = "tcpip-stack-socket.cma"
 archive(byte, plugin) = "tcpip-stack-socket.cma"
 archive(native) = "tcpip-stack-socket.cmxa"
 archive(native, plugin) = "tcpip-stack-socket.cmxs"
 exists_if = "tcpip-stack-socket.cma"
)

package "stack-direct" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs ipaddr lwt result fmt mirage-protocols mirage-protocols-lwt mirage-stack-lwt mirage-net-lwt mirage-time mirage-random mirage-device"
 archive(byte) = "tcpip-stack-direct.cma"
 archive(byte, plugin) = "tcpip-stack-direct.cma"
 archive(native) = "tcpip-stack-direct.cmxa"
 archive(native, plugin) = "tcpip-stack-direct.cmxs"
 exists_if = "tcpip-stack-direct.cma"
)

package "ipv6" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs io-page mirage-protocols-lwt ipaddr cstruct cstruct.ppx lwt tcpip tcpip.ethif duration mirage-time-lwt mirage-clock-lwt"
 archive(byte) = "ipv6.cma"
 archive(byte, plugin) = "ipv6.cma"
 archive(native) = "ipv6.cmxa"
 archive(native, plugin) = "ipv6.cmxs"
 exists_if = "ipv6.cma"
)

package "ipv4" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs io-page mirage-protocols ipaddr cstruct.ppx lwt result rresult tcpip tcpip.ethif tcpip.udp tcpip.tcp"
 archive(byte) = "ipv4.cma"
 archive(byte, plugin) = "ipv4.cma"
 archive(native) = "ipv4.cmxa"
 archive(native, plugin) = "ipv4.cmxs"
 exists_if = "ipv4.cma"
)

package "icmpv4-socket" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix tcpip.icmpv4 tcpip.ipv4 tcpip.ipv6 mirage-protocols mirage-protocols-lwt"
 archive(byte) = "icmpv4-socket.cma"
 archive(byte, plugin) = "icmpv4-socket.cma"
 archive(native) = "icmpv4-socket.cmxa"
 archive(native, plugin) = "icmpv4-socket.cmxs"
 exists_if = "icmpv4-socket.cma"
)

package "icmpv4" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs mirage-protocols mirage-protocols-lwt cstruct cstruct.ppx lwt ipaddr result rresult mirage-profile tcpip fmt"
 archive(byte) = "icmpv4.cma"
 archive(byte, plugin) = "icmpv4.cma"
 archive(native) = "icmpv4.cmxa"
 archive(native, plugin) = "icmpv4.cmxs"
 exists_if = "icmpv4.cma"
)

package "ethif" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "logs mirage-protocols-lwt ipaddr cstruct lwt mirage-profile result rresult mirage-net-lwt"
 archive(byte) = "ethif.cma"
 archive(byte, plugin) = "ethif.cma"
 archive(native) = "ethif.cmxa"
 archive(native, plugin) = "ethif.cmxs"
 exists_if = "ethif.cma"
)

package "arpv4" (
 version = "3.0.0"
 description =
 "Implementations for network-related module types from MirageOS."
 requires =
 "mirage-protocols-lwt logs ipaddr cstruct cstruct.ppx lwt result rresult tcpip.ethif duration fmt mirage-clock-lwt mirage-time-lwt"
 archive(byte) = "arpv4.cma"
 archive(byte, plugin) = "arpv4.cma"
 archive(native) = "arpv4.cmxa"
 archive(native, plugin) = "arpv4.cmxs"
 exists_if = "arpv4.cma"
)
# OASIS_STOP

